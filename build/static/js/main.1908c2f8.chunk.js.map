{"version":3,"sources":["Components/NavBar.js","Components/Map.js","Components/All.js","Components/GlobalChart.js","Components/CountryCharts.js","Components/DonutChart.js","Components/VaccineChart.js","Components/Vacc2.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","padding","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","paddingLeft","transition","transitions","create","SearchAppBar","allCountries","updateChartByCountry","classes","className","Toolbar","Typography","variant","noWrap","Autocomplete","onChange","event","newValue","country","id","options","getOptionLabel","option","style","renderInput","params","TextField","label","placeholder","on","Map","props","value-suffix","size","data","mapData","filter","e","All","allData","cases","deaths","recovered","LineChart","chartData","labels","Object","keys","datasets","values","fill","borderColor","scales","yAxes","ticks","beginAtZero","VerticalBar","chartCountries","map","slice","borderWidth","DoughnutChart","timeline","reduce","acc","App","useState","setmapData","setchartData","loading","setloading","isError","setisError","setchartCountries","setallData","setallCountries","vaccData","setvaccData","vaccAll","setvaccAll","choosenCountry","a","fetch","res","json","countryData","vaccCountry","fetchData","countriesData","all","useEffect","then","countryInfo","iso2","value","catch","console","log","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1908c2f8.chunk.js","sourcesContent":["import Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { fade, makeStyles } from \"@material-ui/core/styles\";\nimport Autocomplete from \"@material-ui/lab/Autocomplete\";\nimport TextField from \"@material-ui/core/TextField\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  menuButton: {\n    marginRight: theme.spacing(2),\n  },\n  title: {\n    flexGrow: 1,\n    display: \"none\",\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"block\",\n    },\n  },\n  search: {\n    position: \"relative\",\n    borderRadius: theme.shape.borderRadius,\n    backgroundColor: fade(theme.palette.common.white, 0.15),\n    \"&:hover\": {\n      backgroundColor: fade(theme.palette.common.white, 0.25),\n    },\n    marginLeft: 0,\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: theme.spacing(1),\n      width: \"auto\",\n    },\n  },\n  searchIcon: {\n    padding: theme.spacing(0, 2),\n    height: \"100%\",\n    position: \"absolute\",\n    pointerEvents: \"none\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  inputRoot: {\n    color: \"inherit\",\n  },\n  inputInput: {\n    padding: theme.spacing(1, 1, 1, 0),\n    // vertical padding + font size from searchIcon\n    paddingLeft: `calc(1em + ${theme.spacing(4)}px)`,\n    transition: theme.transitions.create(\"width\"),\n    width: \"100%\",\n    [theme.breakpoints.up(\"sm\")]: {\n      width: \"12ch\",\n      \"&:focus\": {\n        width: \"20ch\",\n      },\n    },\n  },\n}));\n\nexport default function SearchAppBar({ allCountries, updateChartByCountry }) {\n  const handleSearch = (event, newValue) => {\n    updateChartByCountry(newValue?.country ?? \"all\");\n  };\n\n  const classes = useStyles();\n\n  return (\n    <div className={classes.root}>\n      <nav>\n        <Toolbar>\n          <Typography className={classes.title} variant=\"h6\" noWrap>\n            Covid-Tracker{\" \"}\n          </Typography>\n          <div className={classes.search}>\n            <Autocomplete\n              onChange={handleSearch}\n              id=\"combo-box-demo\"\n              options={allCountries}\n              getOptionLabel={(option) => option.country}\n              style={{ width: 300 }}\n              renderInput={(params) => (\n                <TextField\n                  {...params}\n                  label=\"Country\"\n                  placeholder=\"Search..\"\n                  variant=\"outlined\"\n                />\n              )}\n              on\n            />\n          </div>\n        </Toolbar>\n      </nav>\n    </div>\n  );\n}\n","import { WorldMap } from \"react-svg-worldmap\";\nexport default function Map(props) {\n  return (\n    <div className=\"map\">\n      <WorldMap\n        color=\"green\"\n        title=\"\"\n        value-suffix=\"people\"\n        size=\"lg\"\n        data={props.mapData.filter((e) => e.country != null)}\n      />\n    </div>\n  );\n}\n","export default function All({ allData }) {\n  return (\n    <div className=\"all\">\n      <div className=\"all-content\">\n        <div className=\"all-element\">Cases: {allData.cases}</div>\n        <div className=\"all-element\">Deaths: {allData.deaths}</div>\n        <div className=\"all-element\">Recovered:{allData.recovered}</div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = ({ chartData }) => {\n  var data = {\n    labels: Object.keys(chartData?.cases) ?? [],\n    datasets: [\n      {\n        label: \"# of Cases\",\n        data: Object.values(chartData?.cases) ?? [],\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132,0.3)\",\n        borderColor: \"rgb(255, 99, 132)\",\n      },\n      {\n        label: \"# of Deaths\",\n        data: Object.values(chartData?.deaths) ?? [],\n        fill: true,\n        backgroundColor: \"rgba(255,255,255,0.3)\",\n        borderColor: \"black\",\n      },\n\n      {\n        label: \"# of Recovered\",\n        data: Object.values(chartData?.recovered) ?? [],\n        fill: true,\n        backgroundColor: \"rgba(12, 237, 125,0.3)\",\n        borderColor: \"rgb(12, 237, 125)\",\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div className=\"globalChart\">\n      <>\n        <Line data={data} options={options} />\n      </>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst VerticalBar = (props) => {\n  const data = {\n    labels: props.chartCountries.map((e) => e.country).slice(0, 10),\n    datasets: [\n      {\n        label: \"# of cases\",\n        data: props.chartCountries.map((e) => e.cases).slice(0, 10),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\"></h1>\n        <div className=\"links\"></div>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  );\n};\n\nexport default VerticalBar;\n","import React from \"react\";\nimport { Doughnut } from \"react-chartjs-2\";\n\nconst DoughnutChart = ({ allData }) => {\n  var data = {\n    labels: Object.keys(allData) ?? [],\n    datasets: [\n      {\n        label: \"\",\n        data: Object.values(allData) ?? [],\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n  return (\n    <>\n      {\" \"}\n      <div className=\"header\">\n        <h1 className=\"title\"></h1>\n        <div className=\"links\"></div>\n      </div>{\" \"}\n      <Doughnut data={data} />\n    </>\n  );\n};\n\nexport default DoughnutChart;\n","import React from \"react\";\nimport { Line } from \"react-chartjs-2\";\n\nconst LineChart = ({ chartData }) => {\n  var data = {\n    labels: Object.keys(chartData) ?? [],\n    datasets: [\n      {\n        label: \"# of Candidates\",\n        data: Object.values(chartData) ?? [],\n        fill: true,\n        backgroundColor: \"rgba(255, 99, 132,0.3)\",\n        borderColor: \"rgb(255, 99, 132)\",\n      },\n    ],\n  };\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <div className=\"globalChart\">\n      <>\n        <Line data={data} options={options} />\n      </>\n    </div>\n  );\n};\n\nexport default LineChart;\n","import React from \"react\";\nimport { Bar } from \"react-chartjs-2\";\n\nconst VerticalBar = (props) => {\n  const data = {\n    labels: props.chartCountries.map((e) => e.country).slice(0, 10),\n    datasets: [\n      {\n        label: \"# of cases\",\n        data: props.chartCountries\n          .map((e) => Object.values(e.timeline).reduce((acc, e) => acc + e))\n          .slice(0, 10),\n        backgroundColor: [\n          \"rgba(255, 99, 132, 0.2)\",\n          \"rgba(54, 162, 235, 0.2)\",\n          \"rgba(255, 206, 86, 0.2)\",\n          \"rgba(75, 192, 192, 0.2)\",\n          \"rgba(153, 102, 255, 0.2)\",\n          \"rgba(255, 159, 64, 0.2)\",\n        ],\n        borderColor: [\n          \"rgba(255, 99, 132, 1)\",\n          \"rgba(54, 162, 235, 1)\",\n          \"rgba(255, 206, 86, 1)\",\n          \"rgba(75, 192, 192, 1)\",\n          \"rgba(153, 102, 255, 1)\",\n          \"rgba(255, 159, 64, 1)\",\n        ],\n        borderWidth: 1,\n      },\n    ],\n  };\n\n  const options = {\n    scales: {\n      yAxes: [\n        {\n          ticks: {\n            beginAtZero: true,\n          },\n        },\n      ],\n    },\n  };\n  return (\n    <>\n      <div className=\"header\">\n        <h1 className=\"title\"></h1>\n        <div className=\"links\"></div>\n      </div>\n      <Bar data={data} options={options} />\n    </>\n  );\n};\n\nexport default VerticalBar;\n","import \"./App.css\";\nimport NavBar from \"./Components/NavBar.js\";\nimport { useState, useEffect } from \"react\";\nimport Map from \"./Components/Map.js\";\nimport All from \"./Components/All\";\nimport LineChart from \"./Components/GlobalChart\";\nimport VerticalBar from \"./Components/CountryCharts\";\nimport DoughnutChart from \"./Components/DonutChart\";\nimport Vb from \"./Components/VaccineChart\";\nimport Bars_2 from \"./Components/Vacc2\";\n\nfunction App() {\n  const [mapData, setmapData] = useState([]);\n  const [chartData, setchartData] = useState(null);\n  const [loading, setloading] = useState(true);\n  const [isError, setisError] = useState(false);\n  const [chartCountries, setchartCountries] = useState([]);\n  const [allData, setallData] = useState({});\n  const [allCountries, setallCountries] = useState([]);\n  const [vaccData, setvaccData] = useState([]);\n  const [vaccAll, setvaccAll] = useState([]);\n\n  const updateChartByCountry = async (choosenCountry) => {\n    setloading(true);\n    const res = await fetch(\n      `https://disease.sh/v3/covid-19/historical/${choosenCountry}`\n    );\n    const data = await res.json();\n\n    setchartData(choosenCountry == \"all\" ? data : data.timeline);\n    var countryData = await fetch(\n      `https://disease.sh/v3/covid-19/countries/${choosenCountry}`\n    );\n    countryData = await countryData.json();\n    var vaccCountry = await fetch(\n      `https://disease.sh/v3/covid-19/vaccine/coverage/countries/${choosenCountry}`\n    );\n    vaccCountry = await vaccCountry.json();\n    setvaccData(vaccCountry.timeline);\n\n    setallData({\n      cases: countryData.cases,\n      recovered: countryData.recovered,\n      deaths: countryData.deaths,\n    });\n    setloading(false);\n  };\n  const fetchData = async () => {\n    try {\n      var countriesData = await fetch(\n        \"https://disease.sh/v3/covid-19/countries\"\n      );\n      countriesData = await countriesData.json();\n\n      //var countries = Object.values(countriesData.country);\n      var allData = await fetch(\n        \"https://disease.sh/v3/covid-19/historical/all\"\n      );\n      allData = await allData.json();\n      var all = await fetch(\"https://disease.sh/v3/covid-19/all\");\n      all = await all.json();\n      var vaccData = await fetch(\n        \"https://disease.sh/v3/covid-19/vaccine/coverage\"\n      );\n      vaccData = await vaccData.json();\n      var vaccAll = await fetch(\n        \"https://disease.sh/v3/covid-19/vaccine/coverage/countries\"\n      );\n      vaccAll = await vaccAll.json();\n      return [countriesData, allData, all, vaccData, vaccAll, null];\n    } catch (e) {\n      return [null, null, null, null, null, null, e];\n    }\n  };\n\n  useEffect(() => {\n    fetchData()\n      .then((data) => {\n        setmapData(\n          data[0].map((e) => {\n            return { country: e.countryInfo?.iso2, value: e.cases };\n          })\n        );\n        setallCountries(data[0].map((e) => ({ country: e.country })));\n\n        setchartCountries(\n          data[0].map((e) => {\n            return {\n              country: e.country,\n              cases: e.cases,\n              recovered: e.recovered,\n              deaths: e.deaths,\n            };\n          })\n        );\n        setchartData(data[1]);\n        setallData({\n          deaths: data[2].deaths,\n          recovered: data[2].recovered,\n          cases: data[2].cases,\n        });\n        setvaccData(data[3]);\n        setvaccAll(data[4]);\n        setisError(false);\n        setloading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setisError(true);\n        setloading(false);\n      });\n  }, []);\n  return (\n    <div className=\"myPage\">\n      <NavBar\n        allCountries={allCountries}\n        updateChartByCountry={updateChartByCountry}\n      />\n      {loading ? (\n        <h1>Loading...</h1>\n      ) : isError ? (\n        <h1>Une erreur s'est produite</h1>\n      ) : (\n        <>\n          {\" \"}\n          <div className=\"content\">\n            <All allData={allData} />\n            <Map mapData={mapData}></Map>\n          </div>\n          <div className=\"charts\">\n            <div className=\"lines\">\n              <LineChart chartData={chartData} />\n            </div>\n            <div className=\"bars\">\n              <VerticalBar chartCountries={chartCountries}></VerticalBar>{\" \"}\n            </div>\n\n            <div className=\"donut\">\n              {\" \"}\n              <DoughnutChart allData={allData}></DoughnutChart>\n            </div>\n            <div className=\"lines\">\n              <Vb chartData={vaccData}></Vb>\n            </div>\n            <div className=\"bars\">\n              <Bars_2 chartCountries={vaccAll}></Bars_2>\n            </div>\n          </div>\n        </>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}